{"ast":null,"code":"const initialState = {\n  todo: [],\n  done: []\n};\n\nconst todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      {\n        return {\n          state,\n          todo: [action.payload, ...state.todo]\n        };\n      }\n\n    case \"DELETE_TODO\":\n      {\n        return {\n          todo: [...state.todo.slice(0, action.payload), ...state.todo.slice(action.payload + 1, state.todo.length)]\n        };\n      }\n\n    case \"DONE_TODO\":\n      {\n        let newArr = [...state.todo];\n        const item = Object.assign({}, newArr[action.payload], {\n          status: true\n        });\n        newArr = [...newArr.slice(0, action.payload), ...newArr.slice(action.payload + 1, state.todo.length)];\n        newArr.push(item); // newArr[action.payload] = item;\n\n        return {\n          todo: newArr\n        };\n      }\n\n    case \"UPDATE_TODO\":\n      {\n        let newArr = [...state.todo];\n        const item = Object.assign({}, newArr[action.payload], {\n          status: false,\n          date: new Date().toString()\n        }); // newArr.unshift(item);\n\n        newArr[action.payload] = item;\n        return {\n          todo: newArr\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["D:/CD18TT7/React/todolist/src/reducers/todoReducer.js"],"names":["initialState","todo","done","todoReducer","state","action","type","payload","slice","length","newArr","item","Object","assign","status","push","date","Date","toString"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AAAiB;AACb,eAAO;AAAEF,UAAAA,KAAF;AAASH,UAAAA,IAAI,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,IAA1B;AAAf,SAAP;AACH;;AACD,SAAK,aAAL;AAAoB;AAChB,eAAO;AACHA,UAAAA,IAAI,EAAE,CACF,GAAGG,KAAK,CAACH,IAAN,CAAWO,KAAX,CAAiB,CAAjB,EAAoBH,MAAM,CAACE,OAA3B,CADD,EAEF,GAAGH,KAAK,CAACH,IAAN,CAAWO,KAAX,CAAiBH,MAAM,CAACE,OAAP,GAAiB,CAAlC,EAAqCH,KAAK,CAACH,IAAN,CAAWQ,MAAhD,CAFD;AADH,SAAP;AAMH;;AACD,SAAK,WAAL;AAAkB;AACd,YAAIC,MAAM,GAAG,CAAC,GAAGN,KAAK,CAACH,IAAV,CAAb;AACA,cAAMU,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAM,CAACL,MAAM,CAACE,OAAR,CAAxB,EAA0C;AACnDO,UAAAA,MAAM,EAAE;AAD2C,SAA1C,CAAb;AAGAJ,QAAAA,MAAM,GAAG,CACL,GAAGA,MAAM,CAACF,KAAP,CAAa,CAAb,EAAgBH,MAAM,CAACE,OAAvB,CADE,EAEL,GAAGG,MAAM,CAACF,KAAP,CAAaH,MAAM,CAACE,OAAP,GAAiB,CAA9B,EAAiCH,KAAK,CAACH,IAAN,CAAWQ,MAA5C,CAFE,CAAT;AAIAC,QAAAA,MAAM,CAACK,IAAP,CAAYJ,IAAZ,EATc,CAUd;;AACA,eAAO;AACHV,UAAAA,IAAI,EAAES;AADH,SAAP;AAGH;;AACD,SAAK,aAAL;AAAoB;AAChB,YAAIA,MAAM,GAAG,CAAC,GAAGN,KAAK,CAACH,IAAV,CAAb;AACA,cAAMU,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAM,CAACL,MAAM,CAACE,OAAR,CAAxB,EAA0C;AACnDO,UAAAA,MAAM,EAAE,KAD2C;AAEnDE,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,QAAX;AAF6C,SAA1C,CAAb,CAFgB,CAMhB;;AACAR,QAAAA,MAAM,CAACL,MAAM,CAACE,OAAR,CAAN,GAAyBI,IAAzB;AACA,eAAO;AACHV,UAAAA,IAAI,EAAES;AADH,SAAP;AAGH;;AACD;AACI,aAAON,KAAP;AAxCR;AA0CH,CA3CD;;AA6CA,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    todo: [],\r\n    done: [],\r\n};\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\": {\r\n            return { state, todo: [action.payload, ...state.todo] };\r\n        }\r\n        case \"DELETE_TODO\": {\r\n            return {\r\n                todo: [\r\n                    ...state.todo.slice(0, action.payload),\r\n                    ...state.todo.slice(action.payload + 1, state.todo.length),\r\n                ],\r\n            };\r\n        }\r\n        case \"DONE_TODO\": {\r\n            let newArr = [...state.todo];\r\n            const item = Object.assign({}, newArr[action.payload], {\r\n                status: true,\r\n            });\r\n            newArr = [\r\n                ...newArr.slice(0, action.payload),\r\n                ...newArr.slice(action.payload + 1, state.todo.length),\r\n            ];\r\n            newArr.push(item);\r\n            // newArr[action.payload] = item;\r\n            return {\r\n                todo: newArr,\r\n            };\r\n        }\r\n        case \"UPDATE_TODO\": {\r\n            let newArr = [...state.todo];\r\n            const item = Object.assign({}, newArr[action.payload], {\r\n                status: false,\r\n                date: new Date().toString(),\r\n            });\r\n            // newArr.unshift(item);\r\n            newArr[action.payload] = item;\r\n            return {\r\n                todo: newArr,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default todoReducer;\r\n"]},"metadata":{},"sourceType":"module"}