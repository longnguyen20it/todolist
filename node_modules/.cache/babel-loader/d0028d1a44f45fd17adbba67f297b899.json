{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\CD18TT7\\\\React\\\\todolist\\\\src\\\\components\\\\MainPage\\\\TodoForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./TodoForm.scss\";\nimport { useSelector } from \"react-redux\";\nimport { addTodo } from \"../../../actions/todoAction\";\n\nconst TodoForm = props => {\n  _s();\n\n  const [value, setValue] = useState(props.value);\n\n  const addNewTodo = () => {\n    const newTodo = {\n      status: false,\n      name: value,\n      date: new Date().toLocaleDateString()\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input--new-todo\",\n      placeholder: \"Input a new todo...\",\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"submit--new-todo\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoForm, \"avGViNLCMF52AfdzrjD0mw5oVXc=\");\n\n_c = TodoForm;\nTodoForm.propsTypes = {\n  value: PropTypes.string.isRequired\n};\nTodoForm.defaultProps = {\n  value: \"\"\n};\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["D:/CD18TT7/React/todolist/src/components/MainPage/TodoForm/index.js"],"names":["React","useState","PropTypes","useSelector","addTodo","TodoForm","props","value","setValue","addNewTodo","newTodo","status","name","date","Date","toLocaleDateString","e","target","propsTypes","string","isRequired","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,iBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,6BAAxB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,KAAK,CAACC,KAAP,CAAlC;;AAEA,QAAME,UAAU,GAAG,MAAM;AACrB,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,IAAI,EAAEL,KAFM;AAGZM,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,kBAAX;AAHM,KAAhB;AAKH,GAND;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,iBAFd;AAGI,MAAA,WAAW,EAAC,qBAHhB;AAII,MAAA,KAAK,EAAER,KAJX;AAKI,MAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxBD;;GAAMF,Q;;KAAAA,Q;AA0BNA,QAAQ,CAACa,UAAT,GAAsB;AAClBX,EAAAA,KAAK,EAAEL,SAAS,CAACiB,MAAV,CAAiBC;AADN,CAAtB;AAIAf,QAAQ,CAACgB,YAAT,GAAwB;AACpBd,EAAAA,KAAK,EAAE;AADa,CAAxB;AAIA,eAAeF,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./TodoForm.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { addTodo } from \"../../../actions/todoAction\";\r\n\r\nconst TodoForm = (props) => {\r\n    const [value, setValue] = useState(props.value);\r\n\r\n    const addNewTodo = () => {\r\n        const newTodo = {\r\n            status: false,\r\n            name: value,\r\n            date: new Date().toLocaleDateString()\r\n        };\r\n    };\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"input--new-todo\"\r\n                placeholder=\"Input a new todo...\"\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n            />\r\n            <button type=\"button\" className=\"submit--new-todo\">\r\n                Add\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nTodoForm.propsTypes = {\r\n    value: PropTypes.string.isRequired,\r\n};\r\n\r\nTodoForm.defaultProps = {\r\n    value: \"\",\r\n};\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}