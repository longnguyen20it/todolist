{"ast":null,"code":"var provider = {\n  phone_formats: ['091 ### ## ##', '+41 91 ### ## ##', '079 ### ## ##', '076 ### ## ##'],\n  prefix: ['Signora', 'Signor', 'Dr.'],\n  first_names: ['Noah', 'Luca', 'David', 'Leon', 'Leandro', 'Nico', 'Levin', 'Julian', 'Tim', 'Ben', 'Gian', 'Jonas', 'Lukas', 'Dario', 'Jan', 'Elias', 'Liam', 'Lionel', 'Samuel', 'Fabio', 'Nevio', 'Matteo', 'Nils', 'Joel', 'Livio', 'Fabian', 'Finn', 'Laurin', 'Robin', 'Simon', 'Elia', 'Gabriel', 'Alexander', 'Nino', 'Luis', 'Andrin', 'Benjamin', 'Louis', 'Diego', 'Lars', 'Rafael', 'Aaron', 'Janis', 'Loris', 'Colin', 'Nicolas', 'Lian', 'Leo', 'Manuel', 'Noel', 'Mia', 'Alina', 'Laura', 'Julia', 'Anna', 'Emma', 'Leonie', 'Lena', 'Lara', 'Elin', 'Elena', 'Lea', 'Sara', 'Nina', 'Chiara', 'Sophia', 'Livia', 'Lia', 'Lina', 'Giulia', 'Jana', 'Sophie', 'Elina', 'Selina', 'Sofia', 'Luana', 'Nora', 'Alessia', 'Emilia', 'Melina', 'Lisa', 'Amélie', 'Lorena', 'Noemi', 'Fiona', 'Valentina', 'Ronja', 'Luisa', 'Sarah', 'Zoe', 'Mila', 'Olivia', 'Emily', 'Leana', 'Ladina', 'Mara', 'Ella', 'Hanna', 'Amelie', 'Elisa'],\n  last_names: ['Albertini', 'Albertolli', 'Bassi', 'Beffa', 'Bernasconi', 'De Agostini', 'Dotta', 'Filippi', 'Filippini', 'Forni', 'Genasci', 'Genoni', 'Jelmini', 'Leventini', 'Lombardi', 'Marchetti', 'Pedrina', 'Pedrini', 'Pervangher', 'Peter', 'Pini', 'Ramelli', 'Ronchi', 'Tonella', 'Zoppi', 'Franzini', 'Guscetti', 'Trosi', 'Motta'],\n  phone: function () {\n    return this.numerify(this.random_element(this.phone_formats));\n  }\n};\nmodule.exports = provider;","map":{"version":3,"sources":["D:/CD18TT7/React/todolist/node_modules/casual/src/providers/it_CH/person.js"],"names":["provider","phone_formats","prefix","first_names","last_names","phone","numerify","random_element","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAG;AAEbC,EAAAA,aAAa,EAAE,CAAC,eAAD,EAAkB,kBAAlB,EAAsC,eAAtC,EAAuD,eAAvD,CAFF;AAIbC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,QAAZ,EAAsB,KAAtB,CAJK;AAMbC,EAAAA,WAAW,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C,MAA7C,EAAqD,OAArD,EAA8D,QAA9D,EAAwE,KAAxE,EAA+E,KAA/E,EAAsF,MAAtF,EAA8F,OAA9F,EAAuG,OAAvG,EAAgH,OAAhH,EAAyH,KAAzH,EAAgI,OAAhI,EAAyI,MAAzI,EAAiJ,QAAjJ,EAA2J,QAA3J,EAAqK,OAArK,EAA8K,OAA9K,EAAuL,QAAvL,EAAiM,MAAjM,EAAyM,MAAzM,EAAiN,OAAjN,EAA0N,QAA1N,EAAoO,MAApO,EAA4O,QAA5O,EAAsP,OAAtP,EAA+P,OAA/P,EAAwQ,MAAxQ,EAAgR,SAAhR,EAA2R,WAA3R,EAAwS,MAAxS,EAAgT,MAAhT,EAAwT,QAAxT,EAAkU,UAAlU,EAA8U,OAA9U,EAAuV,OAAvV,EAAgW,MAAhW,EAAwW,QAAxW,EAAkX,OAAlX,EAA2X,OAA3X,EAAoY,OAApY,EAA6Y,OAA7Y,EAAsZ,SAAtZ,EAAia,MAAja,EAAya,KAAza,EAAgb,QAAhb,EAA0b,MAA1b,EAAkc,KAAlc,EAAyc,OAAzc,EAAkd,OAAld,EAA2d,OAA3d,EAAoe,MAApe,EAA4e,MAA5e,EAAof,QAApf,EAA8f,MAA9f,EAAsgB,MAAtgB,EAA8gB,MAA9gB,EAAshB,OAAthB,EAA+hB,KAA/hB,EAAsiB,MAAtiB,EAA8iB,MAA9iB,EAAsjB,QAAtjB,EAAgkB,QAAhkB,EAA0kB,OAA1kB,EAAmlB,KAAnlB,EAA0lB,MAA1lB,EAAkmB,QAAlmB,EAA4mB,MAA5mB,EAAonB,QAApnB,EAA8nB,OAA9nB,EAAuoB,QAAvoB,EAAipB,OAAjpB,EAA0pB,OAA1pB,EAAmqB,MAAnqB,EAA2qB,SAA3qB,EAAsrB,QAAtrB,EAAgsB,QAAhsB,EAA0sB,MAA1sB,EAAktB,SAAltB,EAA6tB,QAA7tB,EAAuuB,OAAvuB,EAAgvB,OAAhvB,EAAyvB,WAAzvB,EAAswB,OAAtwB,EAA+wB,OAA/wB,EAAwxB,OAAxxB,EAAiyB,KAAjyB,EAAwyB,MAAxyB,EAAgzB,QAAhzB,EAA0zB,OAA1zB,EAAm0B,OAAn0B,EAA40B,QAA50B,EAAs1B,MAAt1B,EAA81B,MAA91B,EAAs2B,OAAt2B,EAA+2B,QAA/2B,EAAy3B,OAAz3B,CANA;AAQbC,EAAAA,UAAU,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,YAA9C,EAA4D,aAA5D,EAA2E,OAA3E,EAAoF,SAApF,EAA+F,WAA/F,EAA4G,OAA5G,EAAqH,SAArH,EAAgI,QAAhI,EAA0I,SAA1I,EAAqJ,WAArJ,EAAkK,UAAlK,EAA8K,WAA9K,EAA2L,SAA3L,EAAsM,SAAtM,EAAiN,YAAjN,EAA+N,OAA/N,EAAwO,MAAxO,EAAgP,SAAhP,EAA2P,QAA3P,EAAqQ,SAArQ,EAAgR,OAAhR,EAAyR,UAAzR,EAAqS,UAArS,EAAiT,OAAjT,EAA0T,OAA1T,CARC;AAUbC,EAAAA,KAAK,EAAE,YAAW;AAChB,WAAO,KAAKC,QAAL,CAAc,KAAKC,cAAL,CAAoB,KAAKN,aAAzB,CAAd,CAAP;AACD;AAZY,CAAf;AAgBAO,MAAM,CAACC,OAAP,GAAiBT,QAAjB","sourcesContent":["var provider = {\n\n  phone_formats: ['091 ### ## ##', '+41 91 ### ## ##', '079 ### ## ##', '076 ### ## ##'],\n\n  prefix: ['Signora', 'Signor', 'Dr.'],\n\n  first_names: ['Noah', 'Luca', 'David', 'Leon', 'Leandro', 'Nico', 'Levin', 'Julian', 'Tim', 'Ben', 'Gian', 'Jonas', 'Lukas', 'Dario', 'Jan', 'Elias', 'Liam', 'Lionel', 'Samuel', 'Fabio', 'Nevio', 'Matteo', 'Nils', 'Joel', 'Livio', 'Fabian', 'Finn', 'Laurin', 'Robin', 'Simon', 'Elia', 'Gabriel', 'Alexander', 'Nino', 'Luis', 'Andrin', 'Benjamin', 'Louis', 'Diego', 'Lars', 'Rafael', 'Aaron', 'Janis', 'Loris', 'Colin', 'Nicolas', 'Lian', 'Leo', 'Manuel', 'Noel', 'Mia', 'Alina', 'Laura', 'Julia', 'Anna', 'Emma', 'Leonie', 'Lena', 'Lara', 'Elin', 'Elena', 'Lea', 'Sara', 'Nina', 'Chiara', 'Sophia', 'Livia', 'Lia', 'Lina', 'Giulia', 'Jana', 'Sophie', 'Elina', 'Selina', 'Sofia', 'Luana', 'Nora', 'Alessia', 'Emilia', 'Melina', 'Lisa', 'Amélie', 'Lorena', 'Noemi', 'Fiona', 'Valentina', 'Ronja', 'Luisa', 'Sarah', 'Zoe', 'Mila', 'Olivia', 'Emily', 'Leana', 'Ladina', 'Mara', 'Ella', 'Hanna', 'Amelie', 'Elisa'],\n\n  last_names: ['Albertini', 'Albertolli', 'Bassi', 'Beffa', 'Bernasconi', 'De Agostini', 'Dotta', 'Filippi', 'Filippini', 'Forni', 'Genasci', 'Genoni', 'Jelmini', 'Leventini', 'Lombardi', 'Marchetti', 'Pedrina', 'Pedrini', 'Pervangher', 'Peter', 'Pini', 'Ramelli', 'Ronchi', 'Tonella', 'Zoppi', 'Franzini', 'Guscetti', 'Trosi', 'Motta'],\n\n  phone: function() {\n    return this.numerify(this.random_element(this.phone_formats));\n  },\n\n};\n\nmodule.exports = provider;\n"]},"metadata":{},"sourceType":"script"}